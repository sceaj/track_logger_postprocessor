'''
Created on May 24, 2019

@author: jeff
'''
import unittest
from parsers.can_frame_parser import CanFrame242Extractor
from converter.data_state import DataState



class CanFrameParserTest(unittest.TestCase):

    test_state = DataState()
        
    def testFrame242(self):
        test_fields = ["$CNDRV","476.72","242","01","00","00","00","58","00","65","00"]
        test_extractor = CanFrame242Extractor()
        test_extractor.extractData(test_fields, CanFrameParserTest.test_state)
        self.assertEqual(0, CanFrameParserTest.test_state.get_data_item(DataState.get_data_name_at_idx(DataState.names.Time)), 'Time was not parsed correctly.')
        self.assertEqual(0, CanFrameParserTest.test_state.get_data_item(DataState.get_data_name_at_idx(DataState.names.Clutch)), 'Clutch Pedal was not parsed correctly.')
        self.assertEqual(0, CanFrameParserTest.test_state.get_data_item(DataState.get_data_name_at_idx(DataState.names.RPM)), 'Engine RPM was not parsed correctly.')
        self.assertEqual(0, CanFrameParserTest.test_state.get_data_item(DataState.get_data_name_at_idx(DataState.names.ECU_Throttle)), 'ECU commanded throttle was not parsed correctly.')                 
        pass


if __name__ == "__main__":
    #import sys;sys.argv = ['', 'Test.testFrame242']
    unittest.main()